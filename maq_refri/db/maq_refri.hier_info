|maq_refri
c100[0] <= refri:inst.cent[0]
c100[1] <= refri:inst.cent[1]
c100[2] <= refri:inst.cent[2]
c100[3] <= refri:inst.cent[3]
c100[4] <= refri:inst.cent[4]
c100[5] <= refri:inst.cent[5]
c100[6] <= refri:inst.cent[6]
Fpga => debouncer:inst2.clk_fpga
reset_d => inst1.IN0
clk => debouncer:inst2.input_key
rst => refri:inst.reset
botao => inst3.IN0
dez => refri:inst.moedas[0]
vinte5 => refri:inst.moedas[1]
cinquenta => refri:inst.moedas[2]
real => refri:inst.moedas[3]
d10[6] <= refri:inst.dez[0]
d10[5] <= refri:inst.dez[1]
d10[4] <= refri:inst.dez[2]
d10[3] <= refri:inst.dez[3]
d10[2] <= refri:inst.dez[4]
d10[1] <= refri:inst.dez[5]
d10[0] <= refri:inst.dez[6]
le[0] <= refri:inst.led[0]
le[1] <= refri:inst.led[1]
le[2] <= refri:inst.led[2]
u1[6] <= refri:inst.uni[0]
u1[5] <= refri:inst.uni[1]
u1[4] <= refri:inst.uni[2]
u1[3] <= refri:inst.uni[3]
u1[2] <= refri:inst.uni[4]
u1[1] <= refri:inst.uni[5]
u1[0] <= refri:inst.uni[6]


|maq_refri|refri:inst
clk => atual[0].CLK
clk => atual[1].CLK
clk => atual[2].CLK
clk => atual[3].CLK
clk => atual[4].CLK
clk => atual[5].CLK
clk => atual[6].CLK
clk => atual[7].CLK
clk => estado.retorna.CLK
clk => estado.refri.CLK
clk => estado.recebe.CLK
clk => estado.init.CLK
clk => button_pressed.IN0
reset => atual[0].ACLR
reset => atual[1].ACLR
reset => atual[2].ACLR
reset => atual[3].ACLR
reset => atual[4].ACLR
reset => atual[5].ACLR
reset => atual[6].ACLR
reset => atual[7].ACLR
reset => estado.retorna.ACLR
reset => estado.refri.ACLR
reset => estado.recebe.ACLR
reset => estado.init.PRESET
reset => estado.init.IN0
moedas[0] => Mux0.IN7
moedas[0] => Mux1.IN7
moedas[0] => Mux2.IN7
moedas[0] => Mux3.IN7
moedas[0] => Mux4.IN7
moedas[0] => Mux5.IN7
moedas[0] => Mux6.IN6
moedas[0] => Mux7.IN4
moedas[0] => Equal1.IN3
moedas[1] => Mux0.IN6
moedas[1] => Mux1.IN6
moedas[1] => Mux2.IN6
moedas[1] => Mux3.IN6
moedas[1] => Mux4.IN6
moedas[1] => Mux5.IN6
moedas[1] => Mux6.IN5
moedas[1] => Mux7.IN3
moedas[1] => Equal1.IN2
moedas[2] => Mux0.IN5
moedas[2] => Mux1.IN5
moedas[2] => Mux2.IN5
moedas[2] => Mux3.IN5
moedas[2] => Mux4.IN5
moedas[2] => Mux5.IN5
moedas[2] => Mux6.IN4
moedas[2] => Mux7.IN2
moedas[2] => Equal1.IN1
moedas[3] => Mux0.IN4
moedas[3] => Mux1.IN4
moedas[3] => Mux2.IN4
moedas[3] => Mux3.IN4
moedas[3] => Mux4.IN4
moedas[3] => Mux5.IN4
moedas[3] => Mux6.IN3
moedas[3] => Mux7.IN1
moedas[3] => Equal1.IN0
button => estado.init.IN1
button => button_pressed.IN1
button => comb.IN1
button => comb.IN1
cent[0] <= cent.DB_MAX_OUTPUT_PORT_TYPE
cent[1] <= cent.DB_MAX_OUTPUT_PORT_TYPE
cent[2] <= cent.DB_MAX_OUTPUT_PORT_TYPE
cent[3] <= cent.DB_MAX_OUTPUT_PORT_TYPE
cent[4] <= cent.DB_MAX_OUTPUT_PORT_TYPE
cent[5] <= cent.DB_MAX_OUTPUT_PORT_TYPE
cent[6] <= cent.DB_MAX_OUTPUT_PORT_TYPE
dez[0] <= dez.DB_MAX_OUTPUT_PORT_TYPE
dez[1] <= dez.DB_MAX_OUTPUT_PORT_TYPE
dez[2] <= dez.DB_MAX_OUTPUT_PORT_TYPE
dez[3] <= dez.DB_MAX_OUTPUT_PORT_TYPE
dez[4] <= dez.DB_MAX_OUTPUT_PORT_TYPE
dez[5] <= dez.DB_MAX_OUTPUT_PORT_TYPE
dez[6] <= dez.DB_MAX_OUTPUT_PORT_TYPE
uni[0] <= uni.DB_MAX_OUTPUT_PORT_TYPE
uni[1] <= uni.DB_MAX_OUTPUT_PORT_TYPE
uni[2] <= uni.DB_MAX_OUTPUT_PORT_TYPE
uni[3] <= uni.DB_MAX_OUTPUT_PORT_TYPE
uni[4] <= uni.DB_MAX_OUTPUT_PORT_TYPE
uni[5] <= uni.DB_MAX_OUTPUT_PORT_TYPE
uni[6] <= uni.DB_MAX_OUTPUT_PORT_TYPE
led[0] <= led[0].DB_MAX_OUTPUT_PORT_TYPE
led[1] <= led[1].DB_MAX_OUTPUT_PORT_TYPE
led[2] <= led[2].DB_MAX_OUTPUT_PORT_TYPE


|maq_refri|debouncer:inst2
clk_fpga => counter[0].CLK
clk_fpga => counter[1].CLK
clk_fpga => counter[2].CLK
clk_fpga => counter[3].CLK
clk_fpga => counter[4].CLK
clk_fpga => counter[5].CLK
clk_fpga => counter[6].CLK
clk_fpga => counter[7].CLK
clk_fpga => counter[8].CLK
clk_fpga => counter[9].CLK
clk_fpga => counter[10].CLK
clk_fpga => counter[11].CLK
clk_fpga => counter[12].CLK
clk_fpga => counter[13].CLK
clk_fpga => counter[14].CLK
clk_fpga => counter[15].CLK
clk_fpga => out_key~reg0.CLK
clk_fpga => intermediate.CLK
rst_debouncer => counter[0].ACLR
rst_debouncer => counter[1].ACLR
rst_debouncer => counter[2].ACLR
rst_debouncer => counter[3].ACLR
rst_debouncer => counter[4].ACLR
rst_debouncer => counter[5].ACLR
rst_debouncer => counter[6].ACLR
rst_debouncer => counter[7].ACLR
rst_debouncer => counter[8].ACLR
rst_debouncer => counter[9].ACLR
rst_debouncer => counter[10].ACLR
rst_debouncer => counter[11].ACLR
rst_debouncer => counter[12].ACLR
rst_debouncer => counter[13].ACLR
rst_debouncer => counter[14].ACLR
rst_debouncer => counter[15].ACLR
rst_debouncer => out_key~reg0.ALOAD
rst_debouncer => intermediate.ALOAD
input_key => always0.IN1
input_key => out_key~reg0.ADATA
input_key => intermediate.ADATA
input_key => intermediate.DATAIN
out_key <= out_key~reg0.DB_MAX_OUTPUT_PORT_TYPE


